<%- include('../userLayout/header') %>
<style>
    .black-border {
    border-color: black; 
}


</style>
    <main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="/home" rel="nofollow" style="color: #000000;">Home</a>
                    <span></span>
                    <a href="/product-list" rel="nofollow" style="color: #000000;">Shop</a>
                    <span></span> Your Cart
                </div>
            </div>
        </div>
        <section class="mt-50 mb-50">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                        <div class="table-responsive">
                            <table class="table shopping-summery text-center clean">
                                <thead>
                                    <tr class="main-heading">
                                        <th scope="col">Image</th>
                                        <th scope="col">Name</th>
                                        <th scope="col">Product Price</th>
                                        <th scope="col">Quantity (Max-Limit: 5)</th>
                                        <th scope="col">Total Amount</th>
                                        <th scope="col">Remove</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% if (cart.items.length > 0) { %>
                                        <% cart.items.forEach((item, index) => { %>
                                            <tr id="item-<%= index + 1 %>">
                                                <td class="image product-thumbnail"><img src="/assets-admin/productImages/<%= item.image[item.image.length -1] %>" alt="#"></td>
                                                <td class="product-des product-name">
                                                    <h5 class="product-name"><a href="#"><%= item.data.title %></a></h5>
                                                    <p class="font-xs">Category: <%= item.data.category %></p>
                                                    <% if (item.data.countInStock <= 10) { %>
                                                        <p class="font-xs text-danger" id="countInStock-<%= item.data._id %>">Only  <%= item.data.countInStock %>  stocks Left</p>
                                                        <% } else { %>
                                                         
                                                    <% } %>
                                                </td>
                                                <td class="price" data-title="Price"><span>Rs.<%= item.data.afterDiscount.toFixed(2) %>/-</span></td>
                                                <td class="text-center" data-title="Stock">
                                                    <div class="cart-product-quantity">
                                                        <input type="number" class="form-control black-border  black-spin-buttons" id="quantity-<%= item.data._id %>" value="<%= item.quantity %>" min="1" max="6" step="1" data-decimals="0" required
                                                            onchange="updateQuantity('<%= item.data._id %>', '<%= user._id %>', this.value)">
                                                    </div>                                                                                              
                                                </td>
                                                <td class="text-right subtotal" data-title="Subtotal" id="price-<%= item.data._id %>">
                                                    <span>Rs.<%= item.price.toFixed(2) %>/-</span>
                                                </td>                                            
                                                <td class="action" data-title="Remove">
                                                    <a href="#" class="text-muted" onclick="removeProductCart('<%= item.data._id %>','<%= user._id %>')">
                                                        <i class="fi-rs-trash"></i>
                                                    </a>
                                                </td>                                            
                                            </tr>
                                        <% }); %>
                                        <tr>
                                            <td colspan="6" class="text-end" onclick="clearCart('<%= user._id %>')">
                                                <a href="#" class="fw-bold text-danger">
                                                    <i class="fi-rs-trash"></i> 
                                                    Clear Cart
                                                </a>
                                            </td>
                                        </tr>
                                        <% } else { %>
                                            <tr>
                                                <td colspan="6" class="text-center">Your cart is empty</td>
                                            </tr>
                                    <% } %>                      
                                </tbody>                                                                
                            </table>
                        </div>
                        <div class="cart-action text-end">
                            <a href="/product-list" class="btn btn-outline-primary btn-success"><i class="fi-rs-shopping-bag mr-10"></i>Continue Shopping</a>
                        </div>
                        <div class="divider center_icon mt-50 mb-50"></i></div>
                        <div class="row mb-50">
                            <div class="col-lg-6 col-md-12">
                                <div class="border p-md-4 p-30 border-radius cart-totals">
                                    <div class="heading_s1 mb-3">
                                        <h4>Cart Totals</h4>
                                    </div>
                                    <div class="table-responsive">
                                        <table class="table">
                                                <tbody>
                                                    <tr>
                                                        <td class="cart_total_label">Cart Subtotal</td>
                                                        <td class="cart_total_amount">
                                                            <span class="font-lg fw-900 text-dark" id="billTotal">Rs.<%= cart.billTotal.toFixed(2) %>/-</span>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="cart_total_label">Shipping</td>
                                                        <td class="cart_total_amount"> <i class="ti-gift mr-5"></i> Free Shipping</td>
                                                    </tr>
                                                    <tr>
                                                        <td class="cart_total_label">Total Amount</td>
                                                        <td class="cart_total_amount">
                                                            <span class="font-lg fw-900 text-dark" id="totalAmount">Rs.<%= cart.billTotal.toFixed(2) %>/-</span>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                        </table>
                                    </div>
                                    <a href="#" class="btn" onclick="proceedToCheckout()"> 
                                        <i class="fi-rs-box-alt mr-10"></i> 
                                        Proceed To CheckOut
                                    </a>                                    
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>
    <!-- Preloader Start -->
    <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
            <div class="preloader-inner position-relative">
                <div class="text-center">
                    <h5 class="mb-5">Now Loading</h5>
                    <div class="loader">
                        <div class="bar bar1"></div>
                        <div class="bar bar2"></div>
                        <div class="bar bar3"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Vendor JS-->
    <script src="assets/js/vendor/modernizr-3.6.0.min.js"></script>
    <script src="assets/js/vendor/jquery-3.6.0.min.js"></script>
    <script src="assets/js/vendor/jquery-migrate-3.3.0.min.js"></script>
    <script src="assets/js/vendor/bootstrap.bundle.min.js"></script>
    <script src="assets/js/plugins/slick.js"></script>
    <script src="assets/js/plugins/jquery.syotimer.min.js"></script>
    <script src="assets/js/plugins/wow.js"></script>
    <script src="assets/js/plugins/jquery-ui.js"></script>
    <script src="assets/js/plugins/perfect-scrollbar.js"></script>
    <script src="assets/js/plugins/magnific-popup.js"></script>
    <script src="assets/js/plugins/select2.min.js"></script>
    <script src="assets/js/plugins/waypoints.js"></script>
    <script src="assets/js/plugins/counterup.js"></script>
    <script src="assets/js/plugins/jquery.countdown.min.js"></script>
    <script src="assets/js/plugins/images-loaded.js"></script>
    <script src="assets/js/plugins/isotope.js"></script>
    <script src="assets/js/plugins/scrollup.js"></script>
    <script src="assets/js/plugins/jquery.vticker-min.js"></script>
    <!-- Template  JS -->
    <script src="./assets/js/main.js?v=3.4"></script>
    <script src="./assets/js/shop.js?v=3.4"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        async function updateQuantity(productId, userId, newQuantity) {
            try {
                let res = await fetch('/updateQuantity', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        productId,
                        userId,
                        newQuantity
                    })
                });
                
                if (res.ok) {
                    const data = await res.json();
                    console.log(data);
                    document.getElementById(`quantity-${productId}`).value = newQuantity;
                    document.getElementById(`price-${productId}`).innerHTML = `Rs.${data.newPrice.toFixed(2)}/-`;
                    const remainingStockElement = document.getElementById(`countInStock-${productId}`);
                    remainingStockElement.innerText = `Stock Left: ${data.countInStock}`;

                    if (data.billTotal !== undefined) {
                         document.getElementById('billTotal').innerHTML = `Rs.${data.billTotal.toFixed(2)}/-`;
                         document.getElementById('totalAmount').innerHTML = `Rs.${data.billTotal.toFixed(2)}/-`;
                    }

                    // To update the remaining quantity
                    
                    await Swal.fire({
                        title: 'Success',
                        text: 'Quantity updated successfully.',
                        icon: 'success',
                        showConfirmButton: false,
                        timer: 1500 
                    });
                } else {
                    const data = await res.json();
                if (res.status === 404 ) {
                await Swal.fire({
                    title: 'Limit Excceded',
                    text: 'You cannot add more than 5 items in a cart', 
                    icon: 'error',
                    showConfirmButton: true
                });
                window.location.reload();
            } 
        }
            } catch (error) {
                console.error('Error:', error);
            }
    }
        
    function removeProductCart(productId, userId) {
        swal.fire({
            title: "Are you sure?",
            text: "Do you want to remove this product from your cart?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('/remove-product', {
                        method: "POST",
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            productId,
                            userId
                        })
                    })
                    .then((response) => {
                        if (response.ok) {
                            return response.json();
                        } else {
                            throw new Error('Network response was not ok.');
                        }
                    })
                    .then((data) => {
                        if (data.success) {
                            swal.fire({
                                title: 'Product Removed',
                                text: '',
                                icon: "success",
                                type: 'success',
                                timer: 1500,
                                timerProgressBar: true,
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            swal.fire('Error Deleting product', data.message, 'error');
                        }
                    })
                    .catch((error) => {
                        swal.fire('Error', 'An error occurred while removing the product.', 'error');
                        console.error('Fetch Error:', error);
                    });
            }
        });
    }

    function clearCart(userId){
        swal.fire({
            title: "Are you sure?",
            text: "Do you want to remove entire cart?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!'
        }).then((result)=>{
             if(result.isConfirmed){
                fetch('/clear-cart',{
                    method:'POST',
                    headers:{
                        'Content-type':'application/json'
                    },
                    body:JSON.stringify({
                        userId
                    })
                })
                .then((response) => {
                    if(response.ok){
                        return response.json()
                    }else{
                        throw new Error('Network response was not ok.')
                    }
                })
                .then((data) => {
                    if(data.success){
                        swal.fire({
                                title: 'Cart is Empty',
                                text: '',
                                icon: "success",
                                type: 'success',
                                timer: 1500,
                                timerProgressBar: true,
                            }).then(() => {
                                window.location.reload();
                        });
                    }else{
                        swal.fire('Error removing cart', data.message, 'error');
                    }
                })
                .catch((error) => {
                        swal.fire('Error', 'An error occurred while clearing the data', 'error');
                        console.error('Fetch Error:', error);
                });
             }
        })
    }

    async function proceedToCheckout(){
        try{
            let response = await fetch('/checkout',{
                method:'GET',
                headers:{
                    'Content-Type':'application/json',
                },
            });
            if(response.status === 200){
                await Swal.fire({
                    title:'Successfully procceded to checkout',
                    text:'',
                    icon:'success',
                    type:'success',
                    confirmButtonColor: '#4CAF50',
                    confirmButtonText: 'Go To Checkout'                  
                });
                window.location.href = '/checkout';
            }else if(response.status === 205){
                await Swal.fire({
                    title:'Oops!',
                    text:'Your cart is empty. Please select item in a cart',
                    icon: 'error',
                    position:'center',
                    timer: 2000
                });
            }else if(response.status === 400){
                const data = await response.json();
                await Swal.fire({
                title: 'Out of Stock',
                text: `Sorry! ${data.message}`,
                icon: 'error',
                position: 'center'
            });
            
            }else{
                await Swal.fire({
                title: 'Error',
                text: 'Failed to procced checkout',
                icon: 'error'
            });
        }
        }catch(error){
            console.log(error.message)
            await Swal.fire({
                title: 'Error',
                text: 'An error occurred.',
                icon: 'error',
                position: 'center',
                showConfirmButton: false,
                timer: 2000,
            });
        }
    }
 </script>               
</body>

</html>