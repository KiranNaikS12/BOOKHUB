<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="styles.css" />
    <title>Password Reset</title>
    <style>
      body {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100vh;
        margin: 0;
        background-color: #afafaf;
      }

      .reset-form {
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        padding: 40px;
        width: 300px;
      }

      label {
        margin-bottom: 10px;
        color: #343a40;
      }

      input {
        padding: 10px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        width: 100%;
      }

      button {
        padding: 10px;
        background-color: #343a40;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        width: 100%;
      }

      .button-container {
        display: flex;
        justify-content: space-between;
      }

      .btn-secondary {
        background-color: #fd3c3c;
        color: #fff;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        cursor: pointer;
        text-decoration: none;
        display: inline-block;
        margin-top: 15px;
      }

      .invalid {
        border-color: red;
        border: 3px solid red;
      }

      .error-message {
        margin-left: 5px;
        color: red;
      }
    </style>
  </head>
  <body>
    <div class="reset-form">
      <h1 style="text-align: center">Forget Password</h1>
      <% if (typeof message1 !== 'undefined') { %>
        <h4 style="color: red; border: 1px solid red; padding: 20px; background-color: rgba(249, 196, 196, 0.53);">
          <%= message1 %>
        </h4>
      <% } %>
      <form action="#" method="post" id="passwordForm">
        
        <input
          type="password"
          id="password"
          name="password"
          required
          placeholder="Enter password"
        />
        <span class="error-message" id="passwordErrorMessage"></span>
        
        <input
          type="password"
          id="confirm_password"
          name="confirm_password"
          required
          placeholder="Confirm password"
        />
        <span class="error-message" id="confirmPasswordErrorMessage"></span>
        <input type="hidden" name="user_id" value="<%= user_id %>" />
        <br /><br />
        <button type="submit" class="submit-button">Reset Password</button>
        <a href="#" class="btn-secondary">Cancel</a>
      </form>
    </div>
      <!-- ... (previous code) ... -->

<script>
    function validateInput(
      inputElement,
      errorMessageElement,
      validationRegex,
      minLength,
      emptyErrorMessage,
      invalidErrorMessage
    ) {
      let input = document.getElementById(inputElement);
      let error = document.getElementById(errorMessageElement);
  
      input.addEventListener("blur", function () {
        const inputValue = input.value.trim();
  
        if (inputValue === "") {
          input.classList.add("invalid");
          error.innerHTML = `<span style="color: red;">${emptyErrorMessage}</span>`;
        } else if (
          inputValue.length < minLength ||
          !validationRegex.test(inputValue)
        ) {
          input.classList.add("invalid");
          error.innerHTML = `<span style="color: red;">${invalidErrorMessage}</span>`;
        } else {
          error.innerHTML = "";
        }
      });
  
      input.addEventListener('focus', function () {
        if (input.classList.contains('invalid')) {
          input.classList.remove("invalid");
          error.innerHTML = '';
        }
      });
    }
  
    validateInput('password', 'passwordErrorMessage', /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_+={}[\]:;<>,.?~\\-])(?=.*[a-zA-Z\d!@#$%^&*()_+={}[\]:;<>,.?~\\-]).{8,}$/, 8, 'Password should not be empty.', 'Enter a valid password.');
  
    function validatePasswordConfirmation(passwordElement, confirmationElement, errorMessageElement, mismatchErrorMessage) {
      let passwordInput = document.getElementById(passwordElement);
      let confirmationInput = document.getElementById(confirmationElement);
      let error = document.getElementById(errorMessageElement);
  
      const confirmationValue = confirmationInput.value.trim();
      const passwordValue = passwordInput.value.trim();
  
      confirmationInput.addEventListener('blur', function () {
         if (confirmationValue !== passwordValue) {
          confirmationInput.classList.add('invalid');
          error.innerHTML = `<span style="color: red;">${mismatchErrorMessage}</span>`;
        } else {
          error.innerHTML = '';
        }
      });
  
      confirmationInput.addEventListener('focus', function () {
        if (confirmationInput.classList.contains('invalid')) {
          confirmationInput.classList.remove("invalid");
          error.innerHTML = '';
        }
      });
    }
  
    validatePasswordConfirmation('password', 'confirm_password', 'confirmPasswordErrorMessage', 'Passwords do not match.');
  
    document.getElementById('passwordForm').addEventListener('submit', function (event) {
      let confirm_passwordInput = document.getElementById('confirm_password');
      let confirm_passwordInputError = document.getElementById('confirmPasswordErrorMessage');
  
      if (confirm_passwordInputError.innerHTML !== '') {
        alert("Passwords do not match. Please check again.");
        event.preventDefault();
      }
    });
  </script>
  
  </body>
</html>
